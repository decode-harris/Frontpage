@import url('https://fonts.googleapis.com/css2?family=Orbitron&display=swap');

/* css reset */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* global variables */
:root {

    /* spacing */
    --sm: 2%;
    --md: 5%;
    --lg: 20%;

    /* colors */
    --color:  rgb(13, 115, 122);
    --color-tr:  rgba(13, 115, 122, 0.75);
    --main: rgb(20, 12, 34);
    --main-tr: rgba(20, 12, 34, 0.952);

    
    --done:rgb(13, 115, 122);
    --need: rgb(133, 67, 14);
    --grey: rgb(107, 106, 104);


    --graphs: 150px;

    /* fonts */
    --font : 'Orbitron', sans-serif; /* futuristic font style */

    /* dev colors */
    --slateblue: rgb(10, 6, 39);
    --gradient: rgb(134,49,244);
    --gradient-background: linear-gradient(90deg, rgba(134,49,244,1) 1%, rgba(110,38,140,1) 55%, rgba(64,0,255,0.9635563698135504) 100%);

    --gradient-alternate: rgb(134,49,244);
    --gradient-background-alternate: linear-gradient(304deg, rgba(134,49,244,1) 1%, rgba(110,38,140,1) 55%, rgba(64,0,255,0.9635563698135504) 100%);

    --gradient-transparent: rgb(99,93,101);
    --gradient-background-transparent: linear-gradient(94deg, rgba(99,93,101,0.8491718931968167) 40%, rgba(30,119,160,0.7932712720788043) 91%);

    /* dev borders */
    --wireframe: 2px solid darkblue;
    --debugging: 2px solid darkred;
    --component: 2px solid darkgreen;


}

/* container component */
.container {
    
    min-height: 100vh;

    /* component props */
    background: var(--main);
    color: var(--color);
    font-family: var(--font);

    /* dev */
    border: var(--wireframe);
}
/* footer */
.footer {

    position: fixed;
    bottom: 0;
    left: 0;
    height: 10vh;
    width: 100%;
    background: rgb(47, 73, 95);

    display: flex;
    justify-content: space-evenly;

    /* padding: var(--sm) var(--md); */

    
}
.footer button {

    background: transparent;
    border: none;
    height: 100%;
    width: 100%;
    
}
.footer button.active {
    
    background: rgb(30, 119, 160);
}
.footer i {
    
    
    font-size: 1.5rem;
}

/* header component */
header {
    /* display props [ flex ] */
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    
    /* component props */
    
    
    /* dev */
    border: var(--component);
}
header .elmnts {
    display: flex;
    
    
}
header .elmnts:nth-child(1) {
    padding: var(--md);
    align-items: center;
    justify-content: flex-start;
}
header .elmnts:nth-child(2) {
    align-items: flex-end;
    justify-content: space-between;
    

}

.tab {
    background: transparent;
    color: #FFF;
    font-size: 0.93rem;
    text-align: center;
    padding: var(--sm);
    text-transform: uppercase;
    letter-spacing: 0.01rem;
    width: 100%;
    min-height: 50px;

    border: 2px solid var(--done);
    border-radius: 10px;
    

    /* dev */
    
}
.tab.active {
    background: var(--done);
    border: 4px solid darkslategray;
}
header h2,
header h5 {
    margin: auto;
}
header h2 {
    font-size: 2rem;
    text-transform: uppercase;
    letter-spacing: 0.2rem;
}
header h5 {
    font-size: 1.2rem;
    text-transform: capitalize;
    letter-spacing: 0.1rem;
}

/* dashboard component */
.dashboard {    
    /* display prosp [ flex ] */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    
    /* dev */
    border: var(--component);
}

/* dashboard [ overview ] */
.overview {
    width: 100%;
}

/* dashboard ul */
.dash {
    
    /* display props [ grid ] */
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: minmax(50px, auto);
    width: 100%;

    /* component props */
    padding: var(--md);

    /* dev */
}
.dash:last-child {

    /* component props */
    margin-bottom: var(--lg);
}

/* dashboard item */
.item {
    /* grid placement [ dashboard ] */
    grid-column: span 2;
    grid-row: span 2;

    /* display prosp [ flex ] */
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;

    /* component props  */
    border: none;
    border-radius: 10px;
    color:  rgb(13, 115, 122);
    text-transform: capitalize;
    padding: var(--sm);
    -webkit-box-shadow: -1px -1px 10px 0px rgba(13, 115, 122, 0.75);
    -moz-box-shadow:    -1px -1px 10px 0px  rgba(13, 115, 122, 0.75);
    box-shadow:         -1px -1px 10px 0px  rgba(13, 115, 122, 0.75);
}

/* dashboard panel */
.panel {
    /* grid placement [ dashboard ] */
    grid-column: span 4;
    grid-row: span 3;

    /* display prosp [ flex ] */
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;

    /* component props  */
    border: none;
    border-radius: 10px;
    color:  rgb(13, 115, 122);
    text-transform: capitalize;
    padding: var(--sm);
    -webkit-box-shadow: -1px -1px 10px 0px rgba(13, 115, 122, 0.75);
    -moz-box-shadow:    -1px -1px 10px 0px  rgba(13, 115, 122, 0.75);
    box-shadow:         -1px -1px 10px 0px  rgba(13, 115, 122, 0.75);
    
    /* dev */
    /* border: var(--debugging); */
}
.panel:nth-child(3) {
    grid-row: span 4;

    /* display props [ none ] */
    display: none;
}
.sml-caps {
    font-size: 0.9rem;
    text-transform: uppercase;
}
.sml-low {
    font-size: 0.9rem;
}
.lrg-num {
    font-size: 1.6rem;
    letter-spacing: 0.16rem;
}

/* [ circular graph [ circle ] : transform to animated futuristic component  */
.circle {

    /* placeholder props */
    position: relative;

    min-width: 120px;
    min-height: 120px;

    letter-spacing: 0.2rem;
    line-height: 1.6;

    border: 5px solid var(--grey);
    border-radius: 50%;
    color: var(--grey);

    
}
.prog {

    /* placeholder props */
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;

    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    border: 10px solid var(--done);
    border-radius: 50%;
    color: var(--done);
}

/* chart graph [ bars ]  */
.chart {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    height: 100%;
    width: 100%;
    padding: var(--md);
    position: relative;


    /* dev */
    /* border: var(--wireframe); */
    
}
.objectives {
    position: relative;
    height: 100%;
    width: 20%;
    max-height: 110px;

    
    /* dev */
    background: var(--grey);
    background: rgb(5, 5, 12);
    background: none;
    /* border: var(--debugging); */
}
.bars {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: var(--done);
}
.bar1 {
    height: 90%;
}
.bar2 {
    height: 33%;
}
.bar3 {
    height: 81%;
}
.bar4 {
    height: 35%;
}

.obj {
    
    position: absolute;
    bottom: -30px;
    left: 50%;
    transform: translate(-50%, 0);
    width: 100%;
    text-align: center;
    
    /* dev */
    /* border: var(--debugging); */
}

/* graph container */
.graph {
    /* position props [ relative ] */
    position: relative;
    
    /* component props */
    margin: 1rem;
    
    /* graph dimension, defined in the HTML */
    height: var(--graph-height);
    width: var(--graph-width);
    width: 100%;
    height: 100%;
    max-width: 220px;
    max-height: 220px;

    /* dev */
    /* border: var(--debugging); */

}

/* linechart ul component */
.linechart {
    /* position props [ absolute ] */
    position: absolute;
    top: 0;
    left: 0;
    
    /* chart dimensions, full parent container height */
    height: 100%;
    width: 100%;
    max-width: 220px;
    max-height: 220px;

    /* component props */
    list-style-type: none;
    
    
    /* dev */
    /* border: var(--component); */
}

/* data-point element [ node ] */
.data-point {
    /* position props [ absolute ] */
    position: absolute;

    /* set data-points as custom variable values */
    left: calc(var(--x) - 6.5px);
    bottom: calc(var(--y) - 5.5px); 
    
    /* component props */
    background: var(--done);
    border: 2px solid var(--done);;
    border-radius: 50%;
    height: 12px;
    width: 12px;

    
}
/* data-line element [ line ] */
.data-lines {
    /* position props [ absolute ] */
    position: absolute;
    
    /* assign [ x , y ] variables via js */
    left: var(--x);
    bottom: var(--y);
    height: 3px;

    /* calc [ hypotenuse ] via js  */
    width: calc(var(--hyp) * 1px);

    /* calc [ angle ] via js */
    transform: rotate(calc(var(--angle) * 1deg));
    transform-origin: left bottom;

    /* component props */
    background: var(--grey);
}




































.impact {
    
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 100%;
    height: 20%;

    /* dev */
    border: var(--debugging);
}
.impact button {
    background: transparent;
    border-radius: 50%;
    height: 30px;
    width: 30px;
}
.user-off {
    border: 4px solid var(--need);
}
.user-on {
    border: 4px solid var(--done);
    color: var(--done);
    background: transparent;
}
.need {
    border: 4px solid var(--need);
    color: var(--need);
}
.done {
    border: 4px solid var(--done);
    color: var(--done);
}



















/* article component */
article {

    width: 100%;
    /* dev */
    border: var(--wireframe);
}
.icon {
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 100%;
    padding: var(--md);

    border: var(--debugging);
}
.box {
    height: 16px;
    width: 16px;
    border: 1px solid  rgba(13, 115, 122, 0.75);
    border-radius: 50%;
}

/* li [ total ] */
/* li [ calculate ] */
/* li [ payment ] */
/* li [ date ] */

@media (min-width: 760px) {
    .item {
        grid-column: span 1;
    }
    .panel {
        grid-column: span 2;
    }
    .panel:nth-child(3) {
        grid-column: span 4;
    }
}